-- 1
CREATE OR REPLACE TRANSIENT TABLE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED AS(
SELECT
A.DS::DATE AS DS,
A.LOCATION_ID,
CONTRACT_NUMBER,
BILLING_ACCOUNT_ID,
PRODUCT,
PRODUCT_DESCRIPTION,
--PRODUCT_GROUP
'NO_AID' AS ADVERTISER_ID,
'NO_CID' AS CAMPAIGN_ID,
'NO_AD_NAME' AS ADVERTISER_NAME,
sfa.id AS SF_ACCOUNT_ID,
sfa.namex AS SF_ACCOUNT_NAME,
C.COUNTRY,
C.GEO_ID,
C.GEO_NAME,
C.PLACE_TYPE,
C.PROPERTY_NAME,
CONTRACT_START_DATE,
CANCELLATION_DS,
CONTRACT_FREE_TRIAL,
CALCULATED_STATUS,
TERM_START,
TERM_END,
TERM_START_DATE,
TERM_END_DATE,
FIRST_DAY_OF_MONTH,
LAST_DAY_OF_MONTH,
DAY_START_CONTRACT_STATUS,
DAY_END_CONTRACT_STATUS,
BILLING_PERIOD_LENGTH,
RENEWAL_TERM_UNIT,
TO_NUMBER(CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD,38,4) AS NET_BILLING_UNIT_USD,
TO_NUMBER(0.00,38,2) AS NEW_MRR,
TO_NUMBER(0.00,38,2) AS BEGINING_MRR,
CASE
    WHEN CALCULATED_STATUS != 'CANCELED' THEN LAG (CONTRACT_BILLING_UNIT_AMT_PER_LOCATION_USD) OVER (PARTITION BY A.LOCATION_ID, BILLING_ACCOUNT_ID, CONTRACT_NUMBER, PRODUCT ORDER BY A.DS ASC)
    ELSE 0 END PRIOR_BILLING_AMT,
MIN(A.DS) OVER(PARTITION BY A.LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY A.DS ASC ) AS MIN_START_DATE,
LAG(TERM_END_DATE) OVER (PARTITION BY A.LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY A.DS ASC) AS PRIOR_TERM_END_DATE,
CASE WHEN (TERM_END_DATE::DATE > PRIOR_TERM_END_DATE::DATE)OR((CONTRACT_BILLING_UNIT_AMT_PER_LOCATION_USD != PRIOR_BILLING_AMT) AND CALCULATED_STATUS != 'CANCELED') THEN CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
ELSE 0
END AS RENEWAL_MRR,
CASE WHEN (CALCULATED_STATUS = 'CANCELED')
AND A.DS=LAG(TERM_END_DATE) OVER(PARTITION BY A.LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY A.DS ASC) THEN CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
ELSE 0
END AS PLANNED_CHURN_MRR,
CASE WHEN A.DS=CANCELLATION_DS AND A.DS < LAG(TERM_END_DATE) OVER(PARTITION BY A.LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY A.DS ASC) 
THEN CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
ELSE 0
END AS UNPLANNED_CHURN_MRR,
TO_NUMBER(0.00,38,2) AS UPLIFT,
TO_NUMBER(0.00,38,2) AS DOWNGRADE,
TO_NUMBER(0.00,38,2) AS ENDING_MRR,
CASE 
WHEN FIRST_VALUE(TERM_END_DATE) OVER(PARTITION BY A.LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,YEAR(A.DS::DATE),MONTH(A.DS::DATE) ORDER BY A.DS ASC) BETWEEN DATE_TRUNC('MONTH',A.DS::DATE) AND LAST_DAY(A.DS::DATE) THEN NET_BILLING_UNIT_USD ELSE 0
END AS PLANNED_EXPIRY,
0 AS RENEWED_GROUP

FROM B2B_CORE.VW_CONTRACT_LOCATION_DAILY A
LEFT join rio_sf.b2b_core.t_calendar b on a.ds = b.ds
LEFT join RIO_SF.hotels_sst.a_location_details_daily c on a.location_id = c.location_id and a.ds = c.ds
LEFT join rio_sf.core_salesforce.sf_account sfa on a.location_id::varchar = sfa.location_id 

WHERE 1=1
AND (A.DS<=A.CANCELLATION_DS OR A.CANCELLATION_DS IS  NULL)
AND (A.DS >= ('2022-07-01'))
);

SELECT * FROM USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED;

-- 2
UPDATE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED A
SET A.NEW_MRR= B.NET_BILLING_UNIT_USD FROM
USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED B
WHERE A.LOCATION_ID=B.LOCATION_ID
AND A.BILLING_ACCOUNT_ID=B.BILLING_ACCOUNT_ID
AND A.CONTRACT_NUMBER=B.CONTRACT_NUMBER
AND A.PRODUCT=B.PRODUCT
AND B.DS=A.MIN_START_DATE
AND A.DS BETWEEN DATE_TRUNC('MONTH',A.MIN_START_DATE::DATE) AND LAST_DAY(B.MIN_START_DATE::DATE) 
; 



-- 3
UPDATE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED A
SET A.BEGINING_MRR= 
---previous month last day CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
B.CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD-
--previous month last day planned churned
B.PLANNED_CHURN_MRR
--prevous month last day planned churned
-
--prevous month last day  unplanned churned
B.UNPLANNED_CHURN_MRR
--prevous month last day  unplanned churned
FROM (
    SELECT LOCATION_ID,BILLING_ACCOUNT_ID, DS,CONTRACT_NUMBER, PRODUCT,CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD, 
    CASE WHEN (CALCULATED_STATUS = 'CANCELED')
    AND DS=LAG(TERM_END_DATE) OVER(PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY DS ASC) THEN CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
    ELSE 0
    END AS PLANNED_CHURN_MRR,
    CASE WHEN DS=CANCELLATION_DS AND DS <  LAG(TERM_END_DATE) OVER(PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT ORDER BY DS ASC) 
    THEN CONTRACT_BILLING_UNIT_NET_AMT_PER_LOCATION_USD
    ELSE 0
    END AS UNPLANNED_CHURN_MRR
    FROM B2B_CORE.VW_CONTRACT_LOCATION_DAILY
    
) B
-- B2B_CORE.VW_CONTRACT_LOCATION_DAILY B 
WHERE A.LOCATION_ID=B.LOCATION_ID
AND A.BILLING_ACCOUNT_ID=B.BILLING_ACCOUNT_ID
AND A.CONTRACT_NUMBER=B.CONTRACT_NUMBER
AND A.PRODUCT=B.PRODUCT
AND B.DS=LAST_DAY(ADD_MONTHS(A.DS::DATE,-1))
AND A.NEW_MRR=0;
--WHERE DS::DATE='2022-07-01';

-- 4
UPDATE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED
SET ENDING_MRR=NET_BILLING_UNIT_USD-PLANNED_CHURN_MRR-UNPLANNED_CHURN_MRR;


-- UPDATE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED A
-- SET A.RENEWED_GROUP= B.GRP
-- FROM (
-- SELECT DS,LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,RENEWAL_MRR,
-- SUM(CASE WHEN RENEWAL_MRR=0 THEN 0 ELSE 1 END) OVER (PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,MONTH(DS),YEAR(DS) ORDER BY DS ASC) AS grp FROM
-- USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED) B
-- WHERE 
-- A.LOCATION_ID=B.LOCATION_ID
-- AND A.BILLING_ACCOUNT_ID=B.BILLING_ACCOUNT_ID
-- AND A.CONTRACT_NUMBER=B.CONTRACT_NUMBER
-- AND A.PRODUCT=B.PRODUCT
-- AND B.DS=B.DS;

------------------------------------------------------------------------------------------------------------------------
-- 5
CREATE OR REPLACE TRANSIENT TABLE USER_SCRATCH.X_JJAMES.INTERMEDIATE_HS_SST_DAILY_CALCULATED AS(
    SELECT *, 
    SUM(CASE WHEN RENEWAL_MRR=0 THEN 0 ELSE 1 END) OVER (PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,MONTH(DS),YEAR(DS) ORDER BY DS ASC) AS grp FROM
    USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED );

-- SELECT * FROM USER_SCRATCH.X_JJAMES.INTERMEDIATE_HS_SST_DAILY_CALCULATED;

------------------------------------------------------------------------------------------------------------------------

-- UPDATE USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED A
-- SET A.RENEWAL_MRR= B.RN_VALUE
-- FROM(
-- SELECT *, FIRST_VALUE(RENEWAL_MRR) OVER (PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,MONTH(DS),YEAR(DS),grp ORDER BY DS ASC) AS RN_VALUE
-- FROM ( 

-- SELECT DS,LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,RENEWAL_MRR,
-- SUM(CASE WHEN RENEWAL_MRR=0 THEN 0 ELSE 1 END) OVER (PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,MONTH(DS),YEAR(DS) ORDER BY DS ASC) AS grp FROM
-- USER_SCRATCH.X_JJAMES.HS_SST_DAILY_CALCULATED)) B

-- WHERE 
-- A.LOCATION_ID=B.LOCATION_ID
-- AND A.BILLING_ACCOUNT_ID=B.BILLING_ACCOUNT_ID
-- AND A.CONTRACT_NUMBER=B.CONTRACT_NUMBER
-- AND A.PRODUCT=B.PRODUCT
-- AND B.DS=B.DS;

--DS::DATE='2022-07-01';


------------------------------------------------------------
-- 6
CREATE OR REPLACE TRANSIENT TABLE USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED AS (
SELECT *,
FIRST_VALUE(RENEWAL_MRR) OVER (PARTITION BY LOCATION_ID,BILLING_ACCOUNT_ID,CONTRACT_NUMBER, PRODUCT,MONTH(DS),YEAR(DS),GRP ORDER BY DS ASC) AS RENEWED_MRR
FROM USER_SCRATCH.X_JJAMES.INTERMEDIATE_HS_SST_DAILY_CALCULATED
);
------------------------------------------------------------
-- 7
UPDATE USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED A
SET A.UPLIFT=RENEWED_MRR-BEGINING_MRR-NEW_MRR
WHERE
((RENEWED_MRR>0 AND RENEWED_MRR>BEGINING_MRR AND BEGINING_MRR>0) OR (RENEWED_MRR>0 AND RENEWED_MRR>NEW_MRR AND NEW_MRR>0));

-- 8
UPDATE USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED A
SET A.DOWNGRADE=BEGINING_MRR+NEW_MRR-RENEWED_MRR
WHERE
(((RENEWED_MRR>0 AND RENEWED_MRR<BEGINING_MRR AND BEGINING_MRR>0)) OR (RENEWED_MRR>0 AND RENEWED_MRR<NEW_MRR AND NEW_MRR>0));

------------------------------------------------------------

-- TEST
SELECT * FROM USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED 
WHERE 1=1
and LOCATION_ID = '8296265'
and CONTRACT_NUMBER = 'CS-000000295002'
and ds >= '2023-06-15'
ORDER BY DS 
limit 1000;


////////////////////////////////////////////////
--PRIVATE DAILY VIEW

-- CREATE OR REPLACE VIEW USER_SCRATCH.X_JJAMES.VW_FINAL_HS_SST_SUB_DAILY AS
-- SELECT
-- DS,CONTRACT_NUMBER,LOCATION_ID,PRODUCT,BILLING_ACCOUNT_ID,ADVERTISER_ID,CAMPAIGN_ID,SF_ACCOUNT_ID,SF_ACCOUNT_NAME
-- CONTRACT_START_DATE,TERM_START_DATE,TERM_END_DATE,CANCELLATION_DS,CALCULATED_STATUS,
-- PRODUCT_DESCRIPTION,COUNTRY,GEO_ID,GEO_NAME,PLACE_TYPE,PROPERTY_NAME,
-- DAY_START_CONTRACT_STATUS,DAY_END_CONTRACT_STATUS,NET_BILLING_UNIT_USD,
-- PRIOR_BILLING_AMT,
-- ROUND(NEW_MRR,2) AS NEW_MRR,
-- ROUND(BEGINING_MRR,2) AS BEGINING_MRR,
-- ROUND(RENEWED_MRR,2) AS RENEWED_MRR,
-- ROUND(UPLIFT,2) AS UPLIFT,
-- ROUND(DOWNGRADE,2) AS DOWNGRADE,
-- ROUND(PLANNED_EXPIRY,2) AS PLANNED_EXPIRY,
-- ROUND(PLANNED_CHURN_MRR,2) AS PLANNED_CHURN_MRR,
-- ROUND(UNPLANNED_CHURN_MRR,2) AS UNPLANNED_CHURN_MRR,
-- ROUND(ENDING_MRR,2) AS ENDING_MRR

-- FROM USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED; 

-- SELECT * FROM USER_SCRATCH.X_JJAMES.VW_FINAL_HS_SST_SUB_DAILY;

////////////////////////////////////////////////

--ANALYTICS STAGING TABLE

CREATE OR REPLACE TRANSIENT TABLE ANALYTICS.STAGING.FINAL_HS_SST_SUB_DAILY CLONE USER_SCRATCH.X_JJAMES.FINAL_HS_SST_DAILY_CALCULATED;
SELECT * FROM ANALYTICS.STAGING.FINAL_HS_SST_SUB_DAILY;

////////////////////////////////////////////////

--STAGING VIEW DAILY

CREATE OR REPLACE VIEW ANALYTICS.STAGING.VW_FINAL_HS_SST_SUB_DAILY AS
SELECT
DS,CONTRACT_NUMBER,LOCATION_ID,PRODUCT,BILLING_ACCOUNT_ID,ADVERTISER_ID,CAMPAIGN_ID,SF_ACCOUNT_ID,SF_ACCOUNT_NAME,
CONTRACT_START_DATE,TERM_START_DATE,TERM_END_DATE,CANCELLATION_DS,CALCULATED_STATUS,
PRODUCT_DESCRIPTION,COUNTRY,GEO_ID,GEO_NAME,PLACE_TYPE,PROPERTY_NAME,
DAY_START_CONTRACT_STATUS,DAY_END_CONTRACT_STATUS,NET_BILLING_UNIT_USD,
PRIOR_BILLING_AMT,
ROUND(NEW_MRR,2) AS NEW_MRR,
ROUND(BEGINING_MRR,2) AS BEGINING_MRR,
ROUND(RENEWED_MRR,2) AS RENEWED_MRR,
ROUND(UPLIFT,2) AS UPLIFT,
ROUND(DOWNGRADE,2) AS DOWNGRADE,
ROUND(PLANNED_EXPIRY,2) AS PLANNED_EXPIRY,
ROUND(PLANNED_CHURN_MRR,2) AS PLANNED_CHURN_MRR,
ROUND(UNPLANNED_CHURN_MRR,2) AS UNPLANNED_CHURN_MRR,
ROUND(ENDING_MRR,2) AS ENDING_MRR
FROM ANALYTICS.STAGING.FINAL_HS_SST_SUB_DAILY; 

////////////////////////////////////////////////

-- TEST STAGING VIEW

SELECT * FROM ANALYTICS.STAGING.VW_FINAL_HS_SST_SUB_DAILY 
WHERE 1=1
-- AND LOCATION_ID = '18455500'
-- AND CONTRACT_NUMBER = 'CS-000000297992'
and contract_start_date > '2023-07-31'
ORDER BY DS
LIMIT 100;




